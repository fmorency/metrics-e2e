version: '3.8'

services:
  netdata:
    image: netdata/netdata:stable
    container_name: netdata
    hostname: netdata
    ports:
      - 19999:19999
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped

  netdata2:
    image: netdata/netdata:stable
    container_name: netdata2
    hostname: netdata2
    ports:
      - 19998:19999  # Use a different host port (19998)
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    depends_on:
      - netdata
      - netdata2
    restart: unless-stopped

  timescaledb:
    image: timescale/timescaledb:latest-pg17
    container_name: timescaledb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: metrics
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./timescaledb/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped

  python-etl:
    build:
      context: ./python-etl
    container_name: python-etl
    environment:
      - PROMETHEUS_URL=http://prometheus:9090
      - TIMESCALEDB_HOST=timescaledb
      - TIMESCALEDB_PORT=5432
      - TIMESCALEDB_DATABASE=metrics
      - TIMESCALEDB_USER=postgres
      - TIMESCALEDB_PASSWORD=postgres
      - COLLECTION_INTERVAL=10
    volumes:
      - ./python-etl:/app
    depends_on:
      - prometheus
      - timescaledb
    restart: unless-stopped

  postgrest:
    image: postgrest/postgrest:v12.2.8
    container_name: postgrest
    ports:
      - 3000:3000
    environment:
      PGRST_DB_URI: postgres://postgres:postgres@timescaledb:5432/metrics
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: postgres
    depends_on:
      - timescaledb
    restart: unless-stopped

  frontend:
      build:
        context: ./frontend
        dockerfile: Dockerfile
      container_name: frontend
      ports:
        - "5173:5173"
      environment:
        - PUBLIC_API_URL=http://postgrest:3000
      volumes:
        - ./frontend:/app
        - /app/node_modules
      depends_on:
        - postgrest
      restart: unless-stopped

volumes:
  pgdata:
  prometheus_data:
